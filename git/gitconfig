
[alias]
    # https://git.wiki.kernel.org/articles/a/l/i/Aliases.html

    # SVN-like shorthands
    co = checkout
    st = status
    di = diff
    br = branch
    ci = commit

    # View the current working tree status using the short format
    s = status -s

    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v

    # Add untracked, remove deleted, and show status
    adda = !git add -A && git status
    # Commit all changes
    ca = !git add -A && git commit -av

    # Switch to a branch, creating it if necessary
    go = checkout -B

    # Pull in remote changes for the current repository and all its submodules
    p = !"git pull; git submodule foreach git pull origin master"

    # Clone a repository including all submodules
    c = clone --recursive

    # Interactive rebase with the given number of latest commits
    reb = "!r() { git rebase -i HEAD~$1; }; r"

    # Fetch a repository ($1) and checkout its ref ($2) HEAD
    browse = !bash -c 'git fetch "$1" "$2" && git checkout FETCH_HEAD' -

    # Show the diff between the latest commit and the current state
    d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
    # `git di $number` shows the diff between the state `$number` revisions ago and the current state
    df = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
    # Diff what is staged for the next commit
    dic = diff --cached
    # Diff overview
    dis = diff --stat

    # Custom graph log (append any tree-ish)
    g = log --graph --decorate --pretty=nice --abbrev-commit
    # Custom graph log for all branches
    ga = log --graph --decorate --pretty=nice --abbrev-commit --branches=* --all
    # Custom graph log (append any tree-ish)
    graph = log --pretty=nice --date-order --graph
    # Custom graph log for all branches
    grapha = log --pretty=nice --date-order --graph --all

    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph --abbrev-commit
    # Custom pretty log
    logp = log --pretty=nice --date-order
    # Diffstat log
    logst = log --stat
    # Short format diffstat log
    logsf = log --stat --format=oneline --abbrev-commit

    # Find out who is currently active on the repository
    # Displays committers in descending order of number of commits
    who = shortlog --numbered --summary --email --no-merges --since="3 months"
    # Credit an author on the latest commit
    credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }g f"

    # `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
    # `git gc`: cleanup unnecessary files and optimize the local repository
    # `git clean -df`: remove untracked files and directories from the working tree
    # `git stash clear`: remove all stashed states
    trim = !git remote prune origin && git gc
    cleanup = !git clean -df && git stash clear

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix

[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes

    # Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
    whitespace = space-before-tab,trailing-space

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true

[credential]
    helper = osxkeychain

[diff]
    tool = vimdiff
    # Do not show any source or destination prefix
    noprefix = false

[difftool]
    prompt = false

[color]
    # color opts: normal, black, red, green, yellow, blue, magenta, cyan, or white
    ui = auto
    interactive = auto

[pretty]
    # tut: http://gitimmersion.com/lab_10.html
    # ref: http://linux.die.net/man/1/git-log
    # Result: <short-sha> <commit-message> (<pointer-names>) -- <commit-author-name>; <relative-time>
    nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"

# URL shorthands
[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
    insteadOf = "github:"
[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
    insteadOf = "gist:"
