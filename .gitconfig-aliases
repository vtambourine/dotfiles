[alias]
	# Branch (b)
	b = branch
	ba = branch --all

	# Commit (c)
	c = commit
	ci = commit
	ca = commit --all
	cA = !git add --all && git commit --verbose
	cAm = !git add --all && git commit --verbose --message
	cm = commit --message
	cam = commit --all --message
	cf = commit --amend --reuse-message HEAD
	cF = commit --amend --no-edit
	co = checkout

	# Index (i)
	id = diff --cached
	idw = diff --cached --word-diff=color

	# Log (l, g)
	l = log --date-order --no-merges --pretty=line --date=short
	g = log --date-order --graph --pretty=nice
	ga = log --date-order --graph --all --pretty=nice

	# Push (p)
	p = push
	pt = push --tags
	#pu = push --set-upstream "$(git-branch-current 2> /dev/null)"

	# Rebase (r)
	r = rebase
	ra = rebase --abort
	rc = rebase --continue
	ri = rebase --interactive
	rs = rebase --skip

	# Working Copy (w)
	s = status --short
	wd = diff --no-ext-diff
	wdw = diff --no-ext-diff --word-diff=color
	wr = reset --soft
	wR = reset --hard

[pretty]
	# tut: http://gitimmersion.com/lab_10.html
	# ref: http://linux.die.net/man/1/git-log
	# Result: <short-sha> <commit-message> (<pointer-names>) -- <commit-author-name>; <relative-time>
	nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"

	# Result: <short-sha> <commit-date> <commit-message> -- <commit-author-name>
	line = "%C(yellow)%h%C(reset) %C(red)%ad%C(reset) %s -- %C(green)%an%C(reset)"
